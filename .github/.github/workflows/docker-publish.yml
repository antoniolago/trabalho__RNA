name: Build & publish Docker images
on:
  push:
    tags:
      - v*
env:
  REGISTRY: ghcr.io
  REGISTRY_USERNAME: antoniolago
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: api/Dockerfile_deploy
            image: ghcr.io/antoniolago/rna-algarismos-arabicos-api
            context: ./front
            platform: linux/arm64
          - dockerfile: front/Dockerfile_deploy
            image: ghcr.io/antoniolago/rna-algarismos-arabicos-front
            context: ./front
            platform: linux/arm64
    permissions:
      contents: read
      packages: write
    steps:
      - name: Generate build ID
        id: prep
        # version=${github.event.label.name}
        # ref will be branch on branch push and tag on tagpush
        run: |
            ref=${GITHUB_REF##*/}
            TAG=${{ github.event.release.tag_name }}
            echo "VERSION=${TAG#v}" >> $GITHUB_ENV
      - name: set env
        run: echo "NOW=$(date +'%Y.%m.%d')" >> $GITHUB_ENV
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ matrix.image }}
          tags: |
            ${{ env.VERSION }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ matrix.image }}:cache
          cache-to: type=registry,ref=${{ matrix.image }}:cache,mode=max